//
//  NemoClient.m
//  Nemo
//
//  Created by lafengnan on 13-12-22.
//  Copyright (c) 2013å¹´ panzhongbin@gmail.com. All rights reserved.
//

#import "NemoClient.h"

static NSString const *proxyUrl = @"http://192.168.1.106:8080";

@interface NemoClient()
{
    NSString *token;    // Authentication token generated by user and password
    NSString *account;  // Account of swift
    NSURLResponse *response; // Response from request
}
@end

@implementation NemoClient
@synthesize userName, passWord;

-(id)init
{
    return [self initUser:@"test:tester" withPassword:@"testing"];
}

-(id)initUser:(NSString *)user withPassword:(NSString *)passKey
{
    if (self = [super initWithBaseURL:[NSURL URLWithString:(NSString *)proxyUrl]]) {
        [self setUserName:user];
        [self setPassWord:passKey];
    }
    
    return self;
}

- (NSDictionary *)setHttpHeader:(NSDictionary *)headerDict
{
    NSDictionary *header = [[NSDictionary alloc] init];
    if (headerDict) {
        // clear the serializer of manager
        if (self.requestSerializer) {
            [self setRequestSerializer:nil];
        }
        AFHTTPRequestSerializer *serializer = [AFHTTPRequestSerializer serializer];
        for (NSString *key in headerDict) {
            [serializer setValue:[headerDict objectForKey:key] forHTTPHeaderField:key];
        }
        [self setRequestSerializer:serializer];
    }
    header = self.requestSerializer.HTTPRequestHeaders;
    
    return header;
}

- (BOOL)authentication:(NSString *)authType
{
    BOOL rc = YES;
    switch ([authType isEqualToString:@"tempAuth"]) {
        case YES:
            [self setHttpHeader:@{@"X-Storage-User":self.userName, @"X-Storage-Pass":self.passWord}] ;
            rc = [self swiftGetContainer:nil object:nil]? YES:NO;
            break;
        default:
            NSLog(@"%@ authentication is not supported noew", authType);
            rc = NO;
            break;
    }
    return  rc;
}

- (BOOL)swiftGetContainer:(NSString *)con object:(NSString *)obj
{
    
    __block BOOL rc  = YES;
    
    if (!con && !obj) {
        // Container and Object are null, this should be authentication
        NSURL *authUrl = [NSURL URLWithString:@"auth/v1.0" relativeToURL:self.baseURL]; // http://192.168.1.106:8080/auth/v1.0
        
        NSURLSessionDataTask *task = [[NSURLSessionDataTask alloc] init];
        
        task = [self GET:[authUrl absoluteString] parameters:nil success:^(NSURLSessionDataTask *task, id responseObject) {
            NSLog(@"Get Token Successful from %@", [authUrl absoluteString]);
        } failure:^(NSURLSessionDataTask *task, NSError *error) {
            NSLog(@"Get Token Failed from %@", [authUrl absoluteString]);
            NSLog(@"error: %@", error);
        }];
        
        if (!task) {
            rc = NO;
        }
    }
    return rc;
}

@end
