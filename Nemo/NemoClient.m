//
//  NemoClient.m
//  Nemo
//
//  Created by lafengnan on 13-12-22.
//  Copyright (c) 2013å¹´ panzhongbin@gmail.com. All rights reserved.
//

#import "NemoClient.h"

@interface NemoClient()
{
    NSString *token;    // Authentication token generated by user and password
    NSString *account;  // Account of swift
    NSURLResponse *response; // Response from request
}
- (BOOL)authentication;
- (BOOL)swiftPutPath:(NSString *)path toContainer:(NSString *)con object:(NSString *)obj;
- (BOOL)swiftPostPath:(NSString *)path toContainer:(NSString *)con object:(NSString *)obj;
- (BOOL)swiftGetFromContainer:(NSString *)con object:(NSString *)obj;
- (BOOL)swiftHeadFromContainer:(NSString *)con object:(NSString *)obj;
- (BOOL)swiftDeleteFromContainer:(NSString *)con object:(NSString *)obj;
@end

@implementation NemoClient
@synthesize userName, passWord, storageUrl;

-(id)init
{
    NSURL *baseUrl = [[NSURL alloc] initWithString:@"http://127.0.0.1:8080"];
    
    return [self initUser:@"test:tester"
                 withPassword:@"testing"
                   forUrl:baseUrl
                 withMeta:nil];
}

-(id)initUser:(NSString *)user withPassword:(NSString *)passKey forUrl:(NSURL *)url withMeta:(NSDictionary *)meta
{
    if (self = [super init]) {
        [self setUserName:user];
        [self setPassWord:passKey];
        [self setStorageUrl:url];
        [self setMetaData:meta];
    }
    
    return self;
}

- (BOOL)authentication
{
    return [self swiftGetFromContainer:nil object:nil]? YES:NO;
}

- (BOOL)swiftGetFromContainer:(NSString *)con object:(NSString *)obj
{
    
    BOOL __block rc  = YES;
    
    NSURL *baseUrl = [self storageUrl];    // http://127.0.0.1
    [NSURL URLWithString:@"auth" relativeToURL:baseUrl]; // http://127.0.0.1/auth
    [NSURL URLWithString:@"v1.0" relativeToURL:baseUrl]; // http://127.0.0.1/auth/v1.0
    
    
    AFHTTPSessionManager *manager = [[AFHTTPSessionManager alloc] initWithBaseURL:baseUrl];
    
    // 1. If account, container and object are all null, the function will get token
    if (!con && !obj) {
        NSLog(@"No container and object is given, get token");
        
        NSDictionary *header = [[NSDictionary alloc] initWithObjectsAndKeys:userName, @"X-Storage-User", passWord, @"X-Storage-Pass", nil];
        
        [manager GET:[baseUrl absoluteString] parameters:header success:^(NSURLSessionDataTask *task, id responseObject) {
            
            NSLog(@"GET Token sucessful");
            
            
            
        } failure:^(NSURLSessionDataTask *task, NSError *error) {
            NSLog(@"GET Token Failed");
            rc = NO;
        }];
        
        
    }
    else
    {
        
    }
    
    
    return rc;
}

@end
